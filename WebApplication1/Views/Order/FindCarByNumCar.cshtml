@model Dal.Model.Car

@{
    ViewBag.Title = "FindCarByNumCar";
}

<h2>FindCarByNumCar</h2>

@using (Html.BeginForm("GetCarBack","Order","POST"))
{
    
    <div class="form-horizontal">
        <h4>Car</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CarID)
        <div class="form-group">
            @Html.LabelFor(model => model.CarNum,"Car number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CarNum, new { htmlAttributes = new { @class = "form-control" , @readonly = "readonly" } )*@
                @Html.TextBoxFor(model => model.CarNum, new { @class = "form-control", @readonly = "readonly" })


                @*@Html.ValidationMessageFor(model => model.CarNum, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.KM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KM, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.CarPic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarPic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarPic, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.IsFix,"Is the car fix?", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.IsFix)
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.ValidationMessageFor(model => model.IsFix, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsRentable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsRentable)
                    @Html.ValidationMessageFor(model => model.IsRentable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    

        @*<div class="form-group">
            @Html.LabelFor(model => model.CarTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarTypeID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarTypeID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.BranchID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BranchID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
